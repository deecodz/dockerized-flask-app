on:
  workflow_dispatch:

jobs:
  provision-eb-instance:
    runs-on: ubuntu-latest

    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Set up AWS credentials
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region us-east-1

      - name: Create EC2 key pair and store in Secrets Manager
        run: |
            KEY_NAME="testkey"
            SECRET_NAME="MytestkeyPrivateKey"
            
            # Try to create the key pair. If it already exists, ignore the error.
            PRIVATE_KEY=$(aws ec2 create-key-pair --key-name $KEY_NAME 2>/dev/null | jq -r '.KeyMaterial' || echo "")
      
            # If we couldn't get a private key from the create command, assume it exists and fetch it.
            [ -z "$PRIVATE_KEY" ] && PRIVATE_KEY=$(aws ec2 describe-key-pairs --key-name $KEY_NAME | jq -r '.KeyPair.KeyMaterial')
      
            # Try to create the secret. If it already exists, this will fail and we'll proceed to the next command.
            aws secretsmanager create-secret --name $SECRET_NAME --secret-string "$PRIVATE_KEY" 2>/dev/null || true
      
            # Update the secret with the private key.
            aws secretsmanager put-secret-value --secret-id $SECRET_NAME --secret-string "$PRIVATE_KEY"

          
      - name: Create instance profile and associate role
        run: |
          aws iam get-instance-profile --instance-profile-name test-instance-profile \
          || (aws iam create-instance-profile --instance-profile-name test-instance-profile &&
          aws iam add-role-to-instance-profile --role-name my-role --instance-profile-name test-instance-profile)
          
      - name: Create Elastic Beanstalk Application
        run: | 
          aws elasticbeanstalk describe-applications --application-name my-app \
          || aws elasticbeanstalk create-application --application-name my-app --description "My application for Elastic Beanstalk"
          
      - name: Provision Elastic Beanstalk instance
        run: |
          aws elasticbeanstalk create-environment \
            --application-name my-app \
            --environment-name my-env-new \
            --option-settings Namespace=aws:autoscaling:launchconfiguration,OptionName=IamInstanceProfile,Value=test-instance-profile \
            Namespace=aws:autoscaling:launchconfiguration,OptionName=EC2KeyName,Value=testkey \
            --region us-east-1 \
            --tier Type=Standard,Name=WebServer \
            --solution-stack-name "64bit Amazon Linux 2023 v4.0.3 running Python 3.9"
