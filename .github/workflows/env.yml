name: Deploy Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'Test'

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # - name: Set Environment Specific Variables
      #   shell: bash
      #   run: |
      #     # Trim whitespace and log the input environment
      #     environment="$(echo '${{ inputs.environment }}' | xargs)"
      #     echo "Received environment: '$environment'"
          
      #     if [[ "$environment" == *Production ]]; then
      #       echo "Using Production settings"
      #       echo "CPU=320" >> $GITHUB_ENV
      #       echo "MEMORY=640" >> $GITHUB_ENV
      #       echo "MEMORY_RESERVATION=640" >> $GITHUB_ENV
      #     else
      #       echo "Using Non-Production settings"
      #       echo "CPU=150" >> $GITHUB_ENV
      #       echo "MEMORY=256" >> $GITHUB_ENV
      #       echo "MEMORY_RESERVATION=174" >> $GITHUB_ENV
      #     fi

      - name: Determine Image URL
        id: setup_image_url
        run: |
          if [[ "${{ inputs.environment }}" != *Production ]]; then
            echo "Using image URL from push_to_ecr output"
            IMAGE_URL="${{ needs.push_to_ecr.outputs.image_url }}"
          elif [ -n "${{ inputs.image_url }}" ]; then
            echo "Using manually provided image URL for production"
            IMAGE_URL="${{ inputs.image_url }}"
          else
            echo "::error ::Image URL must be provided for production environment"
            exit 1
          fi
          echo "IMAGE_URL=${IMAGE_URL}" >> $GITHUB_ENV
